unit Calculator_main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  Tfrm_main = class(TForm)
    grb_input: TGroupBox;
    Label5: TLabel;
    cbx_resCount: TComboBox;
    edt_searched: TEdit;
    Label6: TLabel;
    lbl_anzRes: TLabel;
    Label7: TLabel;
    grb_output: TGroupBox;
    Button1: TButton;
    procedure config(Sender: TObject);
    function KTwo(R1,R2 : integer):integer;
    function KThree(R1,R2,R3 : integer):integer;
    function KFour(R1,R2,R3, R4 : integer):integer;

  private
    { Private-Deklarationen }
  public
    { Public-Deklarationen }
  end;

var
  frm_main: Tfrm_main;
  res1 : double;
  res2 : double;
  res3 : double;
  res4 : double;
  searched : double;
  method : string;

implementation

{$R *.dfm}

//===Function K=2 Parameter: K==================================================

function Tfrm_main.KTwo(R1,R2 : integer):integer;
begin
//R1 + R2
  if searched - (res1 + res2) > searched - (R1 + R2) then
    begin
      res1 := R1;
      res2 := R2;
      method := 'R1 + R2';
    end;

//R1 || R2
  if searched - (1 div ((1 div res1) + (1 div res2))) > searched - (1 div ((1 div R1) + (1 div R2))) then
    begin
      res1 := R1;
      res2 := R2;
      method := 'R1 || R2';
    end;
end;

//===Function K=3 Parameter: K==================================================

function Tfrm_main.KThree(R1,R2,R3 : integer):integer;
begin
//R1 + R2 + R3
  if searched - (res1 + res2 + res3) > searched - (R1 + R2 + R3) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      method := 'R1 + R2 + R3';
    end;


//(R1 || R2) + R3
  if searched - ((1 div ((1 div res1) + (1 div res2))) + res3) > searched - ((1 div ((1 div R1) + (1 div R2))) + R3) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      method := '(R1 || R2) + R3';
    end;

//R1 || R2 || R3
  if searched - (1 div ((1 div res1) + (1 div res2) + (1 div res3))) > searched - (1 div ((1 div R1) + (1 div R2) + (1 div R3))) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      method := 'R1 || R2 || R3';
    end;

  KTwo(R1, R2);
end;

//===Function K=4 Parameter: K==================================================

function Tfrm_main.KFour(R1,R2,R3,R4 : integer):integer;
begin
  {

       (R1 || R2) || (R3 || R4)





    N(m) = Sum[k=1; m](k^2)
  }
//(R1 || R2) + (R3 || R4)
  if searched - ((1 div ((1 div res1) + (1 div res2))) + (1 div ((1 div res2) + (1 div res3)))) > searched - ((1 div ((1 div R1) + (1 div R2))) + (1 div ((1 div R3) + (1 div R4)))) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      res4 := R4;
      method := '(R1 || R2) + (R3 || R4)';
    end;

//(R1 || R2) + R3 + R4
  if searched - ((1 div ((1 div res1) + (1 div res2))) + res3 + res4) > searched - ((1 div ((1 div R1) + (1 div R2))) + R3 + R4) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      res4 := R4;
      method := '(R1 || R2) + R3 + R4';
    end;

//R1 + R2 + R3 + R4
  if searched - (res1 + res2 + res3 + res4) > searched - (R1 + R2 + R3 + R4) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      res4 := R4;
      method := 'R1 + R2 + R3 + R4';
    end;

//(R1 + R2) || (R3 + R4)
  if searched - (1 div ((1 div (res1 + res2)) + (1 div (res3 + res4)))) > searched - (1 div ((1 div (R1 + R2)) + (1 div (R3 + R4)))) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      res4 := R4;
      method := '(R1 + R2) || (R3 + R4)';
    end;

//(R1 || R2) || (R3 || R4)
  if searched - ((1 div ((1 div res1) + (1 div res2))) + (1 div ((1 div res2) + (1 div res3)))) > searched - ((1 div ((1 div R1) + (1 div R2))) + (1 div ((1 div R3) + (1 div R4)))) then
    begin
      res1 := R1;
      res2 := R2;
      res3 := R3;
      res4 := R4;
      method := '(R1 || R2) + (R3 || R4)';
    end;



  KThree(R1,R2,R3);
end;

//===Procedure Config===========================================================

procedure Tfrm_main.config(Sender: TObject);
begin
//
end;

end.

//==============================================================================
{
  R1 +  R2
  R1 || R2

  R1 +  R2  +   R3
 (R1 || R2) +   R3
  R1 || R2 ||   R3

  R1 +  R2  +   R3 +  R4
 (R1 || R2) +   R3 +  R4
 (R1 || R2) +  (R3 || R4)
 (R1 +  R2) || (R3 +  R4)
  R1 || R2  ||  R3 || R4
 (R1 || R2) || (R3 || R4)
}
